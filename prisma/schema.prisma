// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(cuid())
  email      String   @unique
  username   String   @unique
  password   String?
  provider   String   @default("local")
  googleId   String?  @unique
  role Role @default(CUSTOMER)
  refreshTokens RefreshToken[]
  orders Order[]
  cart Cart?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

// RefreshToken model 
model RefreshToken {
  id String  @id @default(cuid())
  token String @unique
  revoked Boolean @default(false)
  createdAt DateTime @default(now())
  expiresAt DateTime
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
}

model Product {
  id String  @id @default(cuid())
  name String
  description String
  imageUrl String
  price Decimal @db.Decimal(8, 2)
  discountPercent Decimal? @db.Decimal(5,2)
  stock Int @default(0)
  categories Category[] @relation("ProductCategories")
  orderItems OrderItem[]
  cartItems CartItem[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Category {
  id       String       @id @default(cuid())
  name     String    @unique
  iconUrl String
  products Product[] @relation("ProductCategories")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Cart {
  id String @id @default(cuid()) 
  user User @relation(fields: [userId], references: [id])
  userId String @unique
  cartItems CartItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id String @id @default(cuid())
  quantity Int
  product Product @relation(fields: [productId], references: [id])
  productId String
  cart Cart @relation(fields: [cartId], references: [id])
  cartId String

  @@unique([productId, cartId])
}

model Order {
  id String @id @default(cuid())
  status OrderStatus @default(PENDING)
  user User @relation(fields: [userId], references: [id])
  userId String
  orderItems OrderItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderItem {
  id String @id @default(cuid())
  quantity Int      
  product Product @relation(fields: [productId], references: [id])
  productId String
  order Order @relation(fields: [orderId], references: [id])
  orderId String

  @@unique([productId, orderId])
}

enum Role {
  ADMIN
  CUSTOMER
}

enum OrderStatus {
  PENDING
  SHIPPED
  DELIVERED
  CANCELLED 
  REFUNDED
}